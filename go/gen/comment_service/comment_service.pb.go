// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: comment_service.proto

package comment_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Attachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	MimeType      string                 `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	mi := &file_comment_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_comment_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_comment_service_proto_rawDescGZIP(), []int{0}
}

func (x *Attachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Attachment) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Attachment) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

type Reaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Emoji         string                 `protobuf:"bytes,1,opt,name=emoji,proto3" json:"emoji,omitempty"`
	Users         []string               `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reaction) Reset() {
	*x = Reaction{}
	mi := &file_comment_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reaction) ProtoMessage() {}

func (x *Reaction) ProtoReflect() protoreflect.Message {
	mi := &file_comment_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reaction.ProtoReflect.Descriptor instead.
func (*Reaction) Descriptor() ([]byte, []int) {
	return file_comment_service_proto_rawDescGZIP(), []int{1}
}

func (x *Reaction) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

func (x *Reaction) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId        string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Attachments   []*Attachment          `protobuf:"bytes,5,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Mentions      []string               `protobuf:"bytes,6,rep,name=mentions,proto3" json:"mentions,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ParentId      string                 `protobuf:"bytes,9,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Reactions     []*Reaction            `protobuf:"bytes,10,rep,name=reactions,proto3" json:"reactions,omitempty"`
	RepliesCount  int32                  `protobuf:"varint,11,opt,name=replies_count,json=repliesCount,proto3" json:"replies_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_comment_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_comment_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_comment_service_proto_rawDescGZIP(), []int{2}
}

func (x *Comment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Comment) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Comment) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Comment) GetMentions() []string {
	if x != nil {
		return x.Mentions
	}
	return nil
}

func (x *Comment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Comment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Comment) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *Comment) GetReactions() []*Reaction {
	if x != nil {
		return x.Reactions
	}
	return nil
}

func (x *Comment) GetRepliesCount() int32 {
	if x != nil {
		return x.RepliesCount
	}
	return 0
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Attachments   []*Attachment          `protobuf:"bytes,4,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Mentions      []string               `protobuf:"bytes,5,rep,name=mentions,proto3" json:"mentions,omitempty"`
	ParentId      string                 `protobuf:"bytes,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_comment_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCommentRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CreateCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateCommentRequest) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *CreateCommentRequest) GetMentions() []string {
	if x != nil {
		return x.Mentions
	}
	return nil
}

func (x *CreateCommentRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

type GetCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentRequest) Reset() {
	*x = GetCommentRequest{}
	mi := &file_comment_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentRequest) ProtoMessage() {}

func (x *GetCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentRequest.ProtoReflect.Descriptor instead.
func (*GetCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetCommentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Attachments   []*Attachment          `protobuf:"bytes,3,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Mentions      []string               `protobuf:"bytes,4,rep,name=mentions,proto3" json:"mentions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCommentRequest) Reset() {
	*x = UpdateCommentRequest{}
	mi := &file_comment_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentRequest) ProtoMessage() {}

func (x *UpdateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCommentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateCommentRequest) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *UpdateCommentRequest) GetMentions() []string {
	if x != nil {
		return x.Mentions
	}
	return nil
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_comment_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCommentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTaskCommentsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TaskId         string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	IncludeReplies bool                   `protobuf:"varint,2,opt,name=include_replies,json=includeReplies,proto3" json:"include_replies,omitempty"`
	Page           int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit          int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetTaskCommentsRequest) Reset() {
	*x = GetTaskCommentsRequest{}
	mi := &file_comment_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskCommentsRequest) ProtoMessage() {}

func (x *GetTaskCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskCommentsRequest.ProtoReflect.Descriptor instead.
func (*GetTaskCommentsRequest) Descriptor() ([]byte, []int) {
	return file_comment_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetTaskCommentsRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *GetTaskCommentsRequest) GetIncludeReplies() bool {
	if x != nil {
		return x.IncludeReplies
	}
	return false
}

func (x *GetTaskCommentsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTaskCommentsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTaskCommentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskCommentsResponse) Reset() {
	*x = GetTaskCommentsResponse{}
	mi := &file_comment_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskCommentsResponse) ProtoMessage() {}

func (x *GetTaskCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskCommentsResponse.ProtoReflect.Descriptor instead.
func (*GetTaskCommentsResponse) Descriptor() ([]byte, []int) {
	return file_comment_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetTaskCommentsResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GetTaskCommentsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetCommentRepliesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentId      string                 `protobuf:"bytes,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentRepliesRequest) Reset() {
	*x = GetCommentRepliesRequest{}
	mi := &file_comment_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentRepliesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentRepliesRequest) ProtoMessage() {}

func (x *GetCommentRepliesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentRepliesRequest.ProtoReflect.Descriptor instead.
func (*GetCommentRepliesRequest) Descriptor() ([]byte, []int) {
	return file_comment_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetCommentRepliesRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *GetCommentRepliesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCommentRepliesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetCommentRepliesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Replies       []*Comment             `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentRepliesResponse) Reset() {
	*x = GetCommentRepliesResponse{}
	mi := &file_comment_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentRepliesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentRepliesResponse) ProtoMessage() {}

func (x *GetCommentRepliesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentRepliesResponse.ProtoReflect.Descriptor instead.
func (*GetCommentRepliesResponse) Descriptor() ([]byte, []int) {
	return file_comment_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetCommentRepliesResponse) GetReplies() []*Comment {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *GetCommentRepliesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type AddReactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Emoji         string                 `protobuf:"bytes,3,opt,name=emoji,proto3" json:"emoji,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddReactionRequest) Reset() {
	*x = AddReactionRequest{}
	mi := &file_comment_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReactionRequest) ProtoMessage() {}

func (x *AddReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReactionRequest.ProtoReflect.Descriptor instead.
func (*AddReactionRequest) Descriptor() ([]byte, []int) {
	return file_comment_service_proto_rawDescGZIP(), []int{11}
}

func (x *AddReactionRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *AddReactionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddReactionRequest) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

type RemoveReactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Emoji         string                 `protobuf:"bytes,3,opt,name=emoji,proto3" json:"emoji,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveReactionRequest) Reset() {
	*x = RemoveReactionRequest{}
	mi := &file_comment_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveReactionRequest) ProtoMessage() {}

func (x *RemoveReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveReactionRequest.ProtoReflect.Descriptor instead.
func (*RemoveReactionRequest) Descriptor() ([]byte, []int) {
	return file_comment_service_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveReactionRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *RemoveReactionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveReactionRequest) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

var File_comment_service_proto protoreflect.FileDescriptor

const file_comment_service_proto_rawDesc = "" +
	"\n" +
	"\x15comment_service.proto\x12\x0ecommentservice\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"c\n" +
	"\n" +
	"Attachment\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x1b\n" +
	"\tmime_type\x18\x04 \x01(\tR\bmimeType\"6\n" +
	"\bReaction\x12\x14\n" +
	"\x05emoji\x18\x01 \x01(\tR\x05emoji\x12\x14\n" +
	"\x05users\x18\x02 \x03(\tR\x05users\"\xaf\x03\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12<\n" +
	"\vattachments\x18\x05 \x03(\v2\x1a.commentservice.AttachmentR\vattachments\x12\x1a\n" +
	"\bmentions\x18\x06 \x03(\tR\bmentions\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1b\n" +
	"\tparent_id\x18\t \x01(\tR\bparentId\x126\n" +
	"\treactions\x18\n" +
	" \x03(\v2\x18.commentservice.ReactionR\treactions\x12#\n" +
	"\rreplies_count\x18\v \x01(\x05R\frepliesCount\"\xd9\x01\n" +
	"\x14CreateCommentRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12<\n" +
	"\vattachments\x18\x04 \x03(\v2\x1a.commentservice.AttachmentR\vattachments\x12\x1a\n" +
	"\bmentions\x18\x05 \x03(\tR\bmentions\x12\x1b\n" +
	"\tparent_id\x18\x06 \x01(\tR\bparentId\"#\n" +
	"\x11GetCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x9a\x01\n" +
	"\x14UpdateCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12<\n" +
	"\vattachments\x18\x03 \x03(\v2\x1a.commentservice.AttachmentR\vattachments\x12\x1a\n" +
	"\bmentions\x18\x04 \x03(\tR\bmentions\"&\n" +
	"\x14DeleteCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x84\x01\n" +
	"\x16GetTaskCommentsRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12'\n" +
	"\x0finclude_replies\x18\x02 \x01(\bR\x0eincludeReplies\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\"o\n" +
	"\x17GetTaskCommentsResponse\x123\n" +
	"\bcomments\x18\x01 \x03(\v2\x17.commentservice.CommentR\bcomments\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"a\n" +
	"\x18GetCommentRepliesRequest\x12\x1b\n" +
	"\tparent_id\x18\x01 \x01(\tR\bparentId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"o\n" +
	"\x19GetCommentRepliesResponse\x121\n" +
	"\areplies\x18\x01 \x03(\v2\x17.commentservice.CommentR\areplies\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"b\n" +
	"\x12AddReactionRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05emoji\x18\x03 \x01(\tR\x05emoji\"e\n" +
	"\x15RemoveReactionRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05emoji\x18\x03 \x01(\tR\x05emoji2\xb5\x05\n" +
	"\x0eCommentService\x12N\n" +
	"\rCreateComment\x12$.commentservice.CreateCommentRequest\x1a\x17.commentservice.Comment\x12H\n" +
	"\n" +
	"GetComment\x12!.commentservice.GetCommentRequest\x1a\x17.commentservice.Comment\x12N\n" +
	"\rUpdateComment\x12$.commentservice.UpdateCommentRequest\x1a\x17.commentservice.Comment\x12M\n" +
	"\rDeleteComment\x12$.commentservice.DeleteCommentRequest\x1a\x16.google.protobuf.Empty\x12b\n" +
	"\x0fGetTaskComments\x12&.commentservice.GetTaskCommentsRequest\x1a'.commentservice.GetTaskCommentsResponse\x12h\n" +
	"\x11GetCommentReplies\x12(.commentservice.GetCommentRepliesRequest\x1a).commentservice.GetCommentRepliesResponse\x12J\n" +
	"\vAddReaction\x12\".commentservice.AddReactionRequest\x1a\x17.commentservice.Comment\x12P\n" +
	"\x0eRemoveReaction\x12%.commentservice.RemoveReactionRequest\x1a\x17.commentservice.CommentB.Z,commentservice/protos/go/gen/comment_serviceb\x06proto3"

var (
	file_comment_service_proto_rawDescOnce sync.Once
	file_comment_service_proto_rawDescData []byte
)

func file_comment_service_proto_rawDescGZIP() []byte {
	file_comment_service_proto_rawDescOnce.Do(func() {
		file_comment_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comment_service_proto_rawDesc), len(file_comment_service_proto_rawDesc)))
	})
	return file_comment_service_proto_rawDescData
}

var file_comment_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_comment_service_proto_goTypes = []any{
	(*Attachment)(nil),                // 0: commentservice.Attachment
	(*Reaction)(nil),                  // 1: commentservice.Reaction
	(*Comment)(nil),                   // 2: commentservice.Comment
	(*CreateCommentRequest)(nil),      // 3: commentservice.CreateCommentRequest
	(*GetCommentRequest)(nil),         // 4: commentservice.GetCommentRequest
	(*UpdateCommentRequest)(nil),      // 5: commentservice.UpdateCommentRequest
	(*DeleteCommentRequest)(nil),      // 6: commentservice.DeleteCommentRequest
	(*GetTaskCommentsRequest)(nil),    // 7: commentservice.GetTaskCommentsRequest
	(*GetTaskCommentsResponse)(nil),   // 8: commentservice.GetTaskCommentsResponse
	(*GetCommentRepliesRequest)(nil),  // 9: commentservice.GetCommentRepliesRequest
	(*GetCommentRepliesResponse)(nil), // 10: commentservice.GetCommentRepliesResponse
	(*AddReactionRequest)(nil),        // 11: commentservice.AddReactionRequest
	(*RemoveReactionRequest)(nil),     // 12: commentservice.RemoveReactionRequest
	(*timestamppb.Timestamp)(nil),     // 13: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),             // 14: google.protobuf.Empty
}
var file_comment_service_proto_depIdxs = []int32{
	0,  // 0: commentservice.Comment.attachments:type_name -> commentservice.Attachment
	13, // 1: commentservice.Comment.created_at:type_name -> google.protobuf.Timestamp
	13, // 2: commentservice.Comment.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 3: commentservice.Comment.reactions:type_name -> commentservice.Reaction
	0,  // 4: commentservice.CreateCommentRequest.attachments:type_name -> commentservice.Attachment
	0,  // 5: commentservice.UpdateCommentRequest.attachments:type_name -> commentservice.Attachment
	2,  // 6: commentservice.GetTaskCommentsResponse.comments:type_name -> commentservice.Comment
	2,  // 7: commentservice.GetCommentRepliesResponse.replies:type_name -> commentservice.Comment
	3,  // 8: commentservice.CommentService.CreateComment:input_type -> commentservice.CreateCommentRequest
	4,  // 9: commentservice.CommentService.GetComment:input_type -> commentservice.GetCommentRequest
	5,  // 10: commentservice.CommentService.UpdateComment:input_type -> commentservice.UpdateCommentRequest
	6,  // 11: commentservice.CommentService.DeleteComment:input_type -> commentservice.DeleteCommentRequest
	7,  // 12: commentservice.CommentService.GetTaskComments:input_type -> commentservice.GetTaskCommentsRequest
	9,  // 13: commentservice.CommentService.GetCommentReplies:input_type -> commentservice.GetCommentRepliesRequest
	11, // 14: commentservice.CommentService.AddReaction:input_type -> commentservice.AddReactionRequest
	12, // 15: commentservice.CommentService.RemoveReaction:input_type -> commentservice.RemoveReactionRequest
	2,  // 16: commentservice.CommentService.CreateComment:output_type -> commentservice.Comment
	2,  // 17: commentservice.CommentService.GetComment:output_type -> commentservice.Comment
	2,  // 18: commentservice.CommentService.UpdateComment:output_type -> commentservice.Comment
	14, // 19: commentservice.CommentService.DeleteComment:output_type -> google.protobuf.Empty
	8,  // 20: commentservice.CommentService.GetTaskComments:output_type -> commentservice.GetTaskCommentsResponse
	10, // 21: commentservice.CommentService.GetCommentReplies:output_type -> commentservice.GetCommentRepliesResponse
	2,  // 22: commentservice.CommentService.AddReaction:output_type -> commentservice.Comment
	2,  // 23: commentservice.CommentService.RemoveReaction:output_type -> commentservice.Comment
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_comment_service_proto_init() }
func file_comment_service_proto_init() {
	if File_comment_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comment_service_proto_rawDesc), len(file_comment_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comment_service_proto_goTypes,
		DependencyIndexes: file_comment_service_proto_depIdxs,
		MessageInfos:      file_comment_service_proto_msgTypes,
	}.Build()
	File_comment_service_proto = out.File
	file_comment_service_proto_goTypes = nil
	file_comment_service_proto_depIdxs = nil
}
